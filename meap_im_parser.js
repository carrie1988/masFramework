var xmlparser = require('meap_xml');var err = require("meap_im_error");var jsdom = null;try {	jsdom = global.Require("jsdom").jsdom;}catch(e){	_ERROR("[meap_im_parser][ERROR] LOAD JSDOM FAIL",e.message);	}//var xslt = process.binding("meap_xslt_bindings");//TODO  remove this temporarilyvar xslt = undefined;function parser(type, res, cb, param){	try {		switch(type) {			case "HTML":				{					//LOG5("[PARSER ]HTML Start",(new Date()).valueOf());					LOG2("[meap_im_parser][PARSER]HTML Start",(new Date()).valueOf());					if (jsdom) {						var dom = jsdom(res, null, {							features: {								FetchExternalResources: false,								ProcessExternalResources: false,								SkipExternalResources: true,							}						});						cb(0, dom);					}					else						cb(-1,null);					//LOG5("[PARSER ]HTML end",(new Date()).valueOf()); 					LOG2("[meap_im_parser][PARSER]HTML end",(new Date()).valueOf()); 									}				break;			case "XML":				var json = xmlparser.toJson(res, {					object : true				});				//LOG4("[PARSER ] XML2JSON");				LOG1("[meap_im_parser][PARSER] XML2JSON");				cb(0, json);				break;			case "XSLT-H":				try{					{						var ts = xslt.transformhtml(param,res,[]);						//LOG4("[PARSER ] HTML XSLT ");						LOG1("[meap_im_parser][PARSER] HTML XSLT ");						cb(0,ts);					}									}				catch(e)				{					_ERROR("[meap_im_parser][PARSER][ERROR] ERROR: XSLT-H Transform Fail - ",e.message);					cb(-1, err.build(e));				}				break;			case "XSLT-X":				try{					{						var ts = xslt.transformxml(param,res,[]);						//LOG4("[PARSER ] XML XSLT ");						LOG1("[meap_im_parser][PARSER] XML XSLT ");						cb(0,ts);					}				}				catch(e)				{					_ERROR("[meap_im_parser][PARSER][ERROR] ERROR: XSLT-X Transform Fail - ",e.message);					cb(-1, err.build(e));				}				break;			default:				//LOG4("[PARSER ] No Parser");				LOG1("[meap_im_parser][PARSER] No Parser");				cb(0, res);				break;		}	} catch(e) {		_ERROR("[meap_im_parser][PARSER][ERROR] ERROR: parser error ",e);		cb(-1, err.build(e));	}}function subString(src,start,end){	var s = src.indexOf(start);	if(s < 0)		return "";	var e = src.indexOf(end,s)+end.length;	if(e < 0)		return "";	return src.substring(s,e);}//exports.MakeXSL = xslt.readXsltString;exports.Runner=parser;exports.subString = subString;